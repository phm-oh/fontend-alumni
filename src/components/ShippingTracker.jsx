// src/components/ShippingTracker.jsx - р╕лр╕Щр╣Йр╕▓р╣Ар╕Кр╣Зр╕Др╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕нр╕вр╣Ир╕▓р╕Зр╣Ар╕Фр╕╡р╕вр╕з (Read-only)
import React, { useState } from 'react';

const ShippingTracker = ({ user, onLogout, onNavigate }) => {
  const [searchTerm, setSearchTerm] = useState('');
  const [searchResults, setSearchResults] = useState([]);
  const [loading, setLoading] = useState(false);

  // р╕Др╣Йр╕Щр╕лр╕▓р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З
  const handleSearch = async () => {
    if (!searchTerm.trim()) {
      showToast('р╕Бр╕гр╕╕р╕Ур╕▓р╕Бр╕гр╕нр╕Бр╕Кр╕╖р╣Ир╕нр╕лр╕гр╕╖р╕нр╣Ар╕ер╕Вр╕Ър╕▒р╕Хр╕гр╕Ыр╕гр╕░р╕Кр╕▓р╕Кр╕Щ', 'error');
      return;
    }

    setLoading(true);
    try {
      const token = localStorage.getItem('adminToken');
      
      // ЁЯФе р╕ер╕нр╕Зр╕лр╕ер╕▓р╕вр╕зр╕┤р╕Шр╕╡р╕Др╣Йр╕Щр╕лр╕▓
      let results = [];
      
      // р╕зр╕┤р╕Шр╕╡р╕Чр╕╡р╣И 1: р╣Гр╕Кр╣Й shipping-list API
      console.log('ЁЯФН Method 1: shipping-list API');
      results = await searchWithShippingAPI(token);
      
      // р╕зр╕┤р╕Шр╕╡р╕Чр╕╡р╣И 2: р╕Цр╣Йр╕▓р╣Др╕бр╣Ир╣Ар╕Ир╕н р╕ер╕нр╕Зр╣Гр╕Кр╣Й alumni API
      if (results.length === 0) {
        console.log('ЁЯФД Method 2: alumni API fallback');
        results = await searchWithAlumniAPI(token);
      }
      
      // р╕зр╕┤р╕Шр╕╡р╕Чр╕╡р╣И 3: р╕Цр╣Йр╕▓р╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Ар╕Ир╕н р╕ер╕нр╕Зр╕Фр╕╢р╕Зр╕Чр╕╕р╕Бр╕Др╕Щр╣Бр╕ер╣Йр╕зр╕Бр╕гр╕нр╕Зр╣Ар╕нр╕З
      if (results.length === 0) {
        console.log('ЁЯФД Method 3: manual filter');
        results = await searchWithManualFilter(token);
      }
      
      setSearchResults(results);
      
      if (results.length === 0) {
        showToast('р╣Др╕бр╣Ир╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕Др╣Йр╕Щр╕лр╕▓ - р╕ер╕нр╕Зр╕Др╣Йр╕Щр╕лр╕▓р╕Фр╣Йр╕зр╕вр╕Кр╕╖р╣Ир╕нр╣Бр╕Чр╕Щ', 'info');
      } else {
        showToast(`р╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕е ${results.length} р╕гр╕▓р╕вр╕Бр╕▓р╕г`, 'success');
      }
    } catch (error) {
      console.error('тЭМ Search error:', error);
      showToast('р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╕Др╣Йр╕Щр╕лр╕▓', 'error');
    } finally {
      setLoading(false);
    }
  };

  // р╕зр╕┤р╕Шр╕╡р╕Чр╕╡р╣И 1: р╣Гр╕Кр╣Й shipping-list API
  const searchWithShippingAPI = async (token) => {
    try {
      const queryParams = new URLSearchParams();
      queryParams.append('search', searchTerm.trim());
      queryParams.append('limit', '50');

      const url = `${import.meta.env.VITE_API_URL}/api/alumni/shipping-list?${queryParams.toString()}`;
      console.log('ЁЯФН Shipping API URL:', url);

      const response = await fetch(url, {
        headers: { 
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });
      
      if (response.ok) {
        const data = await response.json();
        console.log('ЁЯУе Shipping API response:', data);
        return data.data || [];
      }
      return [];
    } catch (error) {
      console.error('тЭМ Shipping API error:', error);
      return [];
    }
  };

  // р╕зр╕┤р╕Шр╕╡р╕Чр╕╡р╣И 2: р╣Гр╕Кр╣Й alumni API р╣Бр╕ер╣Йр╕зр╕Бр╕гр╕нр╕З
  const searchWithAlumniAPI = async (token) => {
    try {
      const fallbackParams = new URLSearchParams();
      fallbackParams.append('search', searchTerm.trim());
      fallbackParams.append('limit', '100');
      
      const fallbackUrl = `${import.meta.env.VITE_API_URL}/api/alumni?${fallbackParams.toString()}`;
      console.log('ЁЯФД Alumni API URL:', fallbackUrl);
      
      const fallbackResponse = await fetch(fallbackUrl, {
        headers: { 
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });
      
      if (fallbackResponse.ok) {
        const fallbackData = await fallbackResponse.json();
        console.log('ЁЯУе Alumni API response:', fallbackData);
        
        const allResults = fallbackData.data || [];
        
        // р╕Бр╕гр╕нр╕Зр╣Ар╕Йр╕Юр╕▓р╕░р╕Др╕Щр╕Чр╕╡р╣Ир╕бр╕╡р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З
        const shippingResults = allResults.filter(alumni => 
          alumni.deliveryOption === 'р╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕Чр╕▓р╕Зр╣Др╕Ыр╕гр╕йр╕Ур╕╡р╕вр╣М' && 
          alumni.status === 'р╕нр╕Щр╕╕р╕бр╕▒р╕Хр╕┤'
        );
        
        console.log('ЁЯУж Filtered shipping results:', shippingResults.length);
        return shippingResults;
      }
      return [];
    } catch (error) {
      console.error('тЭМ Alumni API error:', error);
      return [];
    }
  };

  // р╕зр╕┤р╕Шр╕╡р╕Чр╕╡р╣И 3: р╕Фр╕╢р╕Зр╕Чр╕╕р╕Бр╕Др╕Щр╣Бр╕ер╣Йр╕зр╕Бр╕гр╕нр╕Зр╣Ар╕нр╕З
  const searchWithManualFilter = async (token) => {
    try {
      console.log('ЁЯФД Manual filter method - getting all shipping data...');
      
      // р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╕р╕Бр╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З
      const statusList = ['р╕гр╕нр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З', 'р╕Бр╕│р╕ер╕▒р╕Зр╕Ир╕▒р╕Фр╕кр╣Ир╕З', 'р╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╣Бр╕ер╣Йр╕з'];
      let allShippingData = [];
      
      for (const status of statusList) {
        try {
          const url = `${import.meta.env.VITE_API_URL}/api/alumni/shipping-list?shippingStatus=${status}&limit=100`;
          const response = await fetch(url, {
            headers: { 'Authorization': `Bearer ${token}` }
          });
          
          if (response.ok) {
            const data = await response.json();
            const statusData = data.data || [];
            allShippingData = [...allShippingData, ...statusData];
            console.log(`ЁЯУж Got ${statusData.length} records for status: ${status}`);
          }
        } catch (error) {
          console.error(`тЭМ Error getting ${status}:`, error);
        }
      }
      
      console.log('ЁЯУж Total shipping records:', allShippingData.length);
      
      // р╕Бр╕гр╕нр╕Зр╕Хр╕▓р╕бр╕Др╕│р╕Др╣Йр╕Щр╕лр╕▓
      const searchLower = searchTerm.toLowerCase().trim();
      const filteredResults = allShippingData.filter(alumni => {
        const firstName = (alumni.firstName || '').toLowerCase();
        const lastName = (alumni.lastName || '').toLowerCase();
        const fullName = `${firstName} ${lastName}`;
        const idCard = alumni.idCard || '';
        const phone = alumni.phone || '';
        
        return firstName.includes(searchLower) ||
               lastName.includes(searchLower) ||
               fullName.includes(searchLower) ||
               idCard.includes(searchTerm) ||
               phone.includes(searchTerm);
      });
      
      console.log('ЁЯОп Manual filter results:', filteredResults.length);
      return filteredResults;
    } catch (error) {
      console.error('тЭМ Manual filter error:', error);
      return [];
    }
  };

  const showToast = (message, type = 'info') => {
    const toast = document.createElement('div');
    toast.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      padding: 12px 20px;
      border-radius: 8px;
      color: white;
      font-weight: 500;
      z-index: 10000;
      animation: slideIn 0.3s ease;
      ${type === 'success' ? 'background: #28a745;' : 
        type === 'error' ? 'background: #dc3545;' : 
        'background: #17a2b8;'}
    `;
    toast.textContent = message;
    document.body.appendChild(toast);
    
    setTimeout(() => {
      toast.style.animation = 'slideOut 0.3s ease';
      setTimeout(() => {
        if (document.body.contains(toast)) {
          document.body.removeChild(toast);
        }
      }, 300);
    }, 3000);
  };

  const getStatusBadgeClass = (status) => {
    const statusMap = {
      'р╕гр╕нр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З': 'status-badge yellow',
      'р╕Бр╕│р╕ер╕▒р╕Зр╕Ир╕▒р╕Фр╕кр╣Ир╕З': 'status-badge blue', 
      'р╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╣Бр╕ер╣Йр╕з': 'status-badge green',
      'р╣Др╕бр╣Ир╕Хр╣Йр╕нр╕Зр╕Ир╕▒р╕Фр╕кр╣Ир╕З': 'status-badge gray'
    };
    return statusMap[status] || 'status-badge gray';
  };

  const getDeliveryIcon = (option) => {
    return option === 'р╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕Чр╕▓р╕Зр╣Др╕Ыр╕гр╕йр╕Ур╕╡р╕вр╣М' ? 'ЁЯУо' : 'ЁЯПл';
  };

  return (
    <div className="admin-layout">
      {/* Header */}
      <header className="admin-header">
        <div className="admin-header-container">
          <div>
            <button 
              className="btn-back"
              onClick={() => onNavigate('admin-shipping-dashboard')}
            >
              тЖР р╕Бр╕ер╕▒р╕Ър╣Бр╕Фр╕Кр╕Ър╕нр╕гр╣Мр╕Ф
            </button>
            <h1 className="admin-header-title">ЁЯУж р╕Хр╕┤р╕Фр╕Хр╕▓р╕бр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З</h1>
            <p className="admin-header-subtitle">р╣Ар╕Кр╣Зр╕Др╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕Вр╕нр╕Зр╕кр╕бр╕▓р╕Кр╕┤р╕Б (р╕нр╣Ир╕▓р╕Щр╕нр╕вр╣Ир╕▓р╕Зр╣Ар╕Фр╕╡р╕вр╕з)</p>
          </div>
          <div className="admin-header-user">
            <span className="admin-user-info">
              р╕кр╕зр╕▒р╕кр╕Фр╕╡, {user?.username || user?.name || user?.email || 'р╕Ьр╕╣р╣Йр╕Фр╕╣р╣Бр╕ер╕гр╕░р╕Ър╕Ъ'}
            </span>
            <button onClick={onLogout} className="admin-logout-btn">
              р╕нр╕нр╕Бр╕Ир╕▓р╕Бр╕гр╕░р╕Ър╕Ъ
            </button>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="admin-main">
        {/* р╕Др╕│р╣Бр╕Щр╕░р╕Щр╕│ */}
        <div className="info-banner" style={{
          backgroundColor: '#e7f3ff',
          border: '1px solid #b8daff',
          borderRadius: '8px',
          padding: '16px',
          marginBottom: '24px',
          display: 'flex',
          alignItems: 'center',
          gap: '12px'
        }}>
          <div style={{ fontSize: '24px' }}>тД╣я╕П</div>
          <div>
            <strong>р╕лр╕Щр╣Йр╕▓р╕Щр╕╡р╣Йр╕кр╕│р╕лр╕гр╕▒р╕Ър╣Ар╕Кр╣Зр╕Др╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕нр╕вр╣Ир╕▓р╕Зр╣Ар╕Фр╕╡р╕вр╕з</strong><br/>
            р╕лр╕▓р╕Бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╣Бр╕Бр╣Йр╣Др╕Вр╕кр╕Цр╕▓р╕Щр╕░р╕лр╕гр╕╖р╕нр╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕ер╕Вр╕Хр╕┤р╕Фр╕Хр╕▓р╕б р╣Гр╕лр╣Йр╣Др╕Ыр╕Чр╕╡р╣И 
            <button 
              onClick={() => onNavigate('admin-bulk-shipping')}
              style={{
                background: 'none',
                border: 'none',
                color: '#007bff',
                textDecoration: 'underline',
                cursor: 'pointer',
                marginLeft: '4px'
              }}
            >
              ЁЯУК р╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З
            </button>
          </div>
        </div>

        {/* Search Section */}
        <div className="search-section">
          <div className="search-container">
            <h2 className="search-title">ЁЯФН р╕Др╣Йр╕Щр╕лр╕▓р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З</h2>
            <div className="search-form">
              <div className="search-input-group">
                <input
                  type="text"
                  placeholder="р╕Др╣Йр╕Щр╕лр╕▓р╕Фр╣Йр╕зр╕вр╕Кр╕╖р╣Ир╕н, р╕Щр╕▓р╕бр╕кр╕Бр╕╕р╕е, р╕лр╕гр╕╖р╕нр╣Ар╕ер╕Вр╕Ър╕▒р╕Хр╕гр╕Ыр╕гр╕░р╕Кр╕▓р╕Кр╕Щ"
                  className="search-input"
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  onKeyPress={(e) => e.key === 'Enter' && handleSearch()}
                />
                <button
                  className="search-btn"
                  onClick={handleSearch}
                  disabled={loading}
                >
                  {loading ? 'р╕Бр╕│р╕ер╕▒р╕Зр╕Др╣Йр╕Щр╕лр╕▓...' : 'р╕Др╣Йр╕Щр╕лр╕▓'}
                </button>
              </div>
            </div>
          </div>
        </div>

        {/* Results */}
        <div className="shipping-results">
          <h3 className="results-title">ЁЯУЛ р╕Ьр╕ер╕Бр╕▓р╕гр╕Др╣Йр╕Щр╕лр╕▓</h3>
          {searchResults.length > 0 ? (
            <div className="results-grid">
              {searchResults.map((alumni) => (
                <div key={alumni._id} className="shipping-card">
                  {/* р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕бр╕▓р╕Кр╕┤р╕Б */}
                  <div className="card-header">
                    <div className="member-info">
                      <div className="member-avatar">
                        {alumni.firstName?.[0]}{alumni.lastName?.[0]}
                      </div>
                      <div className="member-details">
                        <h4>{alumni.firstName} {alumni.lastName}</h4>
                        <p>{alumni.department} тАв р╕гр╕╕р╣Ир╕Щ {alumni.graduationYear}</p>
                        <p>ЁЯУЮ {alumni.phone}</p>
                      </div>
                    </div>
                    <div className="member-status">
                      <span className={getStatusBadgeClass(alumni.shippingStatus)}>
                        {alumni.shippingStatus || 'р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕'}
                      </span>
                    </div>
                  </div>

                  {/* р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З */}
                  <div className="card-body">
                    <div className="delivery-info">
                      <div className="delivery-option">
                        <span className="label">{getDeliveryIcon(alumni.deliveryOption)} р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З:</span>
                        <span className="value">{alumni.deliveryOption}</span>
                      </div>

                      {alumni.deliveryOption === 'р╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕Чр╕▓р╕Зр╣Др╕Ыр╕гр╕йр╕Ур╕╡р╕вр╣М' && (
                        <>
                          <div className="delivery-address">
                            <span className="label">ЁЯУН р╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣И:</span>
                            <span className="value">{alumni.address}</span>
                          </div>

                          {alumni.trackingNumber && (
                            <div className="tracking-info">
                              <span className="label">ЁЯП╖я╕П р╣Ар╕ер╕Вр╕Хр╕┤р╕Фр╕Хр╕▓р╕б:</span>
                              <span className="value tracking-number">
                                {alumni.trackingNumber}
                                <button 
                                  className="tracking-link"
                                  onClick={() => window.open(`https://track.thailandpost.co.th/?trackNumber=${alumni.trackingNumber}`, '_blank')}
                                  title="р╕Хр╕┤р╕Фр╕Хр╕▓р╕бр╕Юр╕▒р╕кр╕Фр╕╕"
                                >
                                  р╕Хр╕┤р╕Фр╕Хр╕▓р╕б
                                </button>
                              </span>
                            </div>
                          )}

                          {alumni.shippedDate && (
                            <div className="shipped-date">
                              <span className="label">ЁЯУЕ р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕Ир╕▒р╕Фр╕кр╣Ир╕З:</span>
                              <span className="value">
                                {new Date(alumni.shippedDate).toLocaleDateString('th-TH')}
                              </span>
                            </div>
                          )}

                          {alumni.deliveryNotes && (
                            <div className="delivery-notes">
                              <span className="label">ЁЯТм р╕лр╕бр╕▓р╕вр╣Ар╕лр╕Хр╕╕:</span>
                              <span className="value">{alumni.deliveryNotes}</span>
                            </div>
                          )}
                        </>
                      )}
                    </div>

                    {/* р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З */}
                    {alumni.shippingHistory && alumni.shippingHistory.length > 0 && (
                      <div className="shipping-history">
                        <h5>ЁЯУЬ р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З</h5>
                        <div className="history-timeline">
                          {alumni.shippingHistory.slice(-3).reverse().map((history, index) => (
                            <div key={index} className="history-item">
                              <div className="history-date">
                                {new Date(history.updatedAt).toLocaleDateString('th-TH')}
                              </div>
                              <div className="history-status">
                                <span className={getStatusBadgeClass(history.shippingStatus)}>
                                  {history.shippingStatus}
                                </span>
                              </div>
                              {history.trackingNumber && (
                                <div className="history-tracking">
                                  ЁЯП╖я╕П {history.trackingNumber}
                                </div>
                              )}
                              {history.notes && (
                                <div className="history-notes">
                                  ЁЯТм {history.notes}
                                </div>
                              )}
                            </div>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>

                  {/* р╕Бр╕▓р╕гр╕Фр╕│р╣Ар╕Щр╕┤р╕Щр╕Бр╕▓р╕г */}
                  <div className="card-footer">
                    <button
                      className="btn btn-outline btn-sm"
                      onClick={() => onNavigate('admin-bulk-shipping')}
                    >
                      тЬПя╕П р╣Бр╕Бр╣Йр╣Др╕Вр╕кр╕Цр╕▓р╕Щр╕░
                    </button>
                    <div className="last-updated">
                      р╕нр╕▒р╕Ыр╣Ар╕Фр╕Хр╕ер╣Ир╕▓р╕кр╕╕р╕Ф: {new Date(alumni.updatedAt).toLocaleString('th-TH')}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          ) : (
            <div className="results-empty">
              <div className="results-empty-icon">ЁЯФН</div>
              <p>р╕Бр╕гр╕нр╕Бр╕Кр╕╖р╣Ир╕нр╕лр╕гр╕╖р╕нр╣Ар╕ер╕Вр╕Ър╕▒р╕Хр╕гр╕Ыр╕гр╕░р╕Кр╕▓р╕Кр╕Щр╣Ар╕Юр╕╖р╣Ир╕нр╕Др╣Йр╕Щр╕лр╕▓</p>
              <p className="results-empty-subtitle">р╕гр╕░р╕Ър╕Ър╕Ир╕░р╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф</p>
            </div>
          )}
        </div>
      </main>

      {/* CSS Styles */}
      <style jsx>{`
        .shipping-results {
          margin-top: 24px;
        }

        .results-grid {
          display: grid;
          grid-template-columns: repeat(auto-fill, minmax(450px, 1fr));
          gap: 24px;
          margin-top: 20px;
        }

        .shipping-card {
          background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
          border-radius: 16px;
          box-shadow: 0 4px 20px rgba(0,0,0,0.08);
          border: 1px solid #e8ecef;
          overflow: hidden;
          transition: all 0.3s ease;
          position: relative;
        }

        .shipping-card:hover {
          transform: translateY(-4px);
          box-shadow: 0 8px 30px rgba(0,0,0,0.12);
        }

        .card-header {
          padding: 24px;
          border-bottom: 1px solid #f1f3f5;
          background: linear-gradient(135deg, #fff 0%, #fafbfc 100%);
          display: flex;
          justify-content: space-between;
          align-items: flex-start;
          position: relative;
        }

        .card-header::before {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          height: 4px;
          background: linear-gradient(90deg, #007bff, #0056b3);
          border-radius: 16px 16px 0 0;
        }

        .member-info {
          display: flex;
          gap: 16px;
          align-items: flex-start;
        }

        .member-avatar {
          width: 56px;
          height: 56px;
          border-radius: 50%;
          background: linear-gradient(135deg, #007bff, #0056b3);
          color: white;
          display: flex;
          align-items: center;
          justify-content: center;
          font-weight: 700;
          font-size: 18px;
          box-shadow: 0 4px 12px rgba(0,123,255,0.3);
          border: 3px solid white;
        }

        .member-details h4 {
          margin: 0 0 6px 0;
          font-size: 20px;
          font-weight: 600;
          color: #2c3e50;
          line-height: 1.2;
        }

        .member-details p {
          margin: 4px 0;
          font-size: 14px;
          color: #6c757d;
          line-height: 1.4;
        }

        .member-status {
          display: flex;
          flex-direction: column;
          align-items: flex-end;
          gap: 8px;
        }

        .card-body {
          padding: 24px;
          background: white;
        }

        .delivery-info {
          display: flex;
          flex-direction: column;
          gap: 16px;
        }

        .delivery-option,
        .delivery-address,
        .tracking-info,
        .shipped-date,
        .delivery-notes {
          display: flex;
          align-items: flex-start;
          gap: 12px;
          padding: 12px;
          background: #f8f9fa;
          border-radius: 8px;
          border-left: 4px solid #007bff;
        }

        .delivery-address {
          border-left-color: #28a745;
        }

        .tracking-info {
          border-left-color: #ffc107;
          background: linear-gradient(135deg, #fff3cd, #ffeaa7);
        }

        .shipped-date {
          border-left-color: #17a2b8;
        }

        .delivery-notes {
          border-left-color: #6c757d;
        }

        .label {
          font-weight: 600;
          color: #495057;
          min-width: 120px;
          flex-shrink: 0;
          font-size: 14px;
        }

        .value {
          flex: 1;
          color: #212529;
          font-size: 14px;
          line-height: 1.5;
        }

        .tracking-number {
          display: flex;
          align-items: center;
          gap: 12px;
          flex-wrap: wrap;
        }

        .tracking-link {
          padding: 6px 12px;
          background: linear-gradient(135deg, #007bff, #0056b3);
          color: white;
          border: none;
          border-radius: 20px;
          font-size: 12px;
          font-weight: 500;
          cursor: pointer;
          text-decoration: none;
          transition: all 0.3s ease;
          box-shadow: 0 2px 8px rgba(0,123,255,0.3);
        }

        .tracking-link:hover {
          transform: translateY(-2px);
          box-shadow: 0 4px 12px rgba(0,123,255,0.4);
          background: linear-gradient(135deg, #0056b3, #004085);
        }

        .shipping-history {
          margin-top: 24px;
          padding-top: 20px;
          border-top: 2px solid #f1f3f5;
        }

        .shipping-history h5 {
          margin: 0 0 16px 0;
          font-size: 16px;
          font-weight: 600;
          color: #495057;
          display: flex;
          align-items: center;
          gap: 8px;
        }

        .history-timeline {
          display: flex;
          flex-direction: column;
          gap: 12px;
          position: relative;
        }

        .history-timeline::before {
          content: '';
          position: absolute;
          left: 24px;
          top: 0;
          bottom: 0;
          width: 2px;
          background: linear-gradient(to bottom, #007bff, #28a745);
          border-radius: 1px;
        }

        .history-item {
          display: flex;
          flex-wrap: wrap;
          gap: 12px;
          align-items: center;
          font-size: 13px;
          padding: 12px 16px 12px 48px;
          background: linear-gradient(135deg, #f8f9fa, #e9ecef);
          border-radius: 8px;
          position: relative;
          border: 1px solid #dee2e6;
        }

        .history-item::before {
          content: '';
          position: absolute;
          left: 16px;
          width: 16px;
          height: 16px;
          background: white;
          border: 3px solid #007bff;
          border-radius: 50%;
          box-shadow: 0 0 0 4px rgba(0,123,255,0.1);
        }

        .history-date {
          color: #495057;
          font-weight: 600;
          font-size: 12px;
        }

        .history-tracking,
        .history-notes {
          color: #6c757d;
          font-size: 12px;
          background: white;
          padding: 4px 8px;
          border-radius: 4px;
          border: 1px solid #dee2e6;
        }

        .card-footer {
          padding: 20px 24px;
          background: linear-gradient(135deg, #f8f9fa, #e9ecef);
          border-top: 1px solid #dee2e6;
          display: flex;
          justify-content: space-between;
          align-items: center;
        }

        .last-updated {
          font-size: 12px;
          color: #6c757d;
          font-style: italic;
        }

        .status-badge {
          padding: 6px 16px;
          border-radius: 20px;
          font-size: 12px;
          font-weight: 600;
          color: white;
          text-transform: uppercase;
          letter-spacing: 0.5px;
          box-shadow: 0 2px 8px rgba(0,0,0,0.15);
          border: 2px solid white;
        }

        .status-badge.yellow { 
          background: linear-gradient(135deg, #ffc107, #e0a800);
          color: #000;
        }
        .status-badge.blue { 
          background: linear-gradient(135deg, #007bff, #0056b3);
        }
        .status-badge.green { 
          background: linear-gradient(135deg, #28a745, #1e7e34);
        }
        .status-badge.gray { 
          background: linear-gradient(135deg, #6c757d, #545b62);
        }

        .results-empty {
          text-align: center;
          padding: 60px 20px;
          color: #6c757d;
          background: linear-gradient(135deg, #f8f9fa, #e9ecef);
          border-radius: 16px;
          border: 2px dashed #dee2e6;
        }

        .results-empty-icon {
          font-size: 48px;
          margin-bottom: 16px;
          opacity: 0.6;
        }

        .results-empty p {
          margin: 8px 0;
          font-size: 16px;
        }

        .results-empty-subtitle {
          font-size: 14px;
          opacity: 0.8;
        }

        .btn.btn-outline.btn-sm {
          padding: 8px 16px;
          background: linear-gradient(135deg, #ffffff, #f8f9fa);
          color: #007bff;
          border: 2px solid #007bff;
          border-radius: 20px;
          font-size: 12px;
          font-weight: 500;
          cursor: pointer;
          transition: all 0.3s ease;
          text-decoration: none;
          display: inline-flex;
          align-items: center;
          gap: 6px;
        }

        .btn.btn-outline.btn-sm:hover {
          background: linear-gradient(135deg, #007bff, #0056b3);
          color: white;
          transform: translateY(-2px);
          box-shadow: 0 4px 12px rgba(0,123,255,0.3);
        }

        /* Search Section Styling */
        .search-section {
          margin-bottom: 32px;
        }

        .search-container {
          background: linear-gradient(135deg, #ffffff, #f8f9fa);
          padding: 32px;
          border-radius: 16px;
          box-shadow: 0 4px 20px rgba(0,0,0,0.08);
          border: 1px solid #e8ecef;
        }

        .search-title {
          margin: 0 0 20px 0;
          font-size: 24px;
          font-weight: 600;
          color: #2c3e50;
          text-align: center;
        }

        .search-input-group {
          display: flex;
          gap: 12px;
          max-width: 600px;
          margin: 0 auto;
        }

        .search-input {
          flex: 1;
          padding: 12px 20px;
          border: 2px solid #dee2e6;
          border-radius: 25px;
          font-size: 16px;
          transition: all 0.3s ease;
          background: white;
        }

        .search-input:focus {
          outline: none;
          border-color: #007bff;
          box-shadow: 0 0 0 4px rgba(0,123,255,0.1);
        }

        .search-btn {
          padding: 12px 24px;
          background: linear-gradient(135deg, #007bff, #0056b3);
          color: white;
          border: none;
          border-radius: 25px;
          font-size: 16px;
          font-weight: 500;
          cursor: pointer;
          transition: all 0.3s ease;
          box-shadow: 0 4px 12px rgba(0,123,255,0.3);
        }

        .search-btn:hover {
          transform: translateY(-2px);
          box-shadow: 0 6px 20px rgba(0,123,255,0.4);
        }

        .search-btn:disabled {
          opacity: 0.6;
          cursor: not-allowed;
          transform: none;
        }

        .results-title {
          font-size: 20px;
          font-weight: 600;
          color: #2c3e50;
          margin-bottom: 16px;
          display: flex;
          align-items: center;
          gap: 8px;
        }

        /* Info Banner Styling */
        .info-banner {
          background: linear-gradient(135deg, #e7f3ff, #cce7ff);
          border: 2px solid #b8daff;
          border-radius: 12px;
          padding: 20px;
          margin-bottom: 32px;
          display: flex;
          align-items: flex-start;
          gap: 16px;
          box-shadow: 0 2px 12px rgba(0,123,255,0.1);
        }

        .info-banner button {
          background: none;
          border: none;
          color: #007bff;
          text-decoration: underline;
          cursor: pointer;
          font-weight: 500;
          padding: 0;
          margin-left: 4px;
          transition: color 0.3s ease;
        }

        .info-banner button:hover {
          color: #0056b3;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
          .results-grid {
            grid-template-columns: 1fr;
          }
          
          .search-input-group {
            flex-direction: column;
          }
          
          .card-header {
            flex-direction: column;
            gap: 16px;
            align-items: flex-start;
          }
          
          .member-info {
            width: 100%;
          }
          
          .card-footer {
            flex-direction: column;
            gap: 12px;
            align-items: flex-start;
          }
        }
      `}</style>
    </div>
  );
};

export default ShippingTracker;