# Alumni Frontend Nginx Configuration
# ‡πÑ‡∏ü‡∏•‡πå: frontend/nginx.conf
# ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö serve static files + React Router support

server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;

    # Security headers (basic)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # ===== Static Files Optimization =====
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        # Cache static files for 1 year
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Try to serve file directly, then fallback
        try_files $uri =404;
    }

    # ===== Manifest and service worker =====
    location ~* \.(webmanifest|manifest\.json)$ {
        expires 1d;
        add_header Cache-Control "public";
        add_header Content-Type "application/manifest+json";
    }

    # ===== API Placeholder (‡∏à‡∏∞‡∏ñ‡∏π‡∏Å override ‡πÇ‡∏î‡∏¢ production nginx) =====
    location /api/ {
        # ‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà test container ‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß
        return 503 "API not available in frontend container";
        add_header Content-Type "text/plain";
    }

    # ===== SPA React Router Support ===== üéØ ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î!
    location / {
        # ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏£‡∏á‡πÜ ‡∏Å‡πà‡∏≠‡∏ô, ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡πÉ‡∏´‡πâ fallback ‡πÑ‡∏õ index.html
        try_files $uri $uri/ /index.html;
        
        # Cache control for HTML files
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # ===== Health Check Endpoint =====
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type "text/plain";
    }

    # ===== Error Pages =====
    error_page 404 /index.html;  # SPA fallback
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # ===== Security: Hide nginx version =====
    server_tokens off;

    # ===== Logging =====
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}